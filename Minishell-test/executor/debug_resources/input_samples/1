types:

COMMAND = 0;
ARGUMENT = 1;
FILE = 2;
> = 3;
< = 4;
>> = 5;
<< = 6;
| = 7;
&& = 8;
|| = 9;
*  = 10;

Row are: token_content // type // priority


[Test0, 2 token]
	Token = make, 0, 0,
	Token = frm, 1, 0,
[END]

case: cat <(ls)
[Test1, 35 token]
	Token = cat,             	0, 0,
	Token = <,              	4, 0,
	Token = (,              	10, 1,
	Token = cat,             	0, 1,
	Token = <,              	4, 1,
	Token = (,              	10, 2,
	Token = ls,             	0, 2,
	Token = ),					10, 1,
	Token = ),					10, 0,
[END]

case: ls | (cd .. && ( cd executor && (cd obj_executor && (echo $PWD && (sleep 2)))) && echo $PWD && sleep 1) && echo $PWD
[Test2, 35 token]
Token = ls,             	0, 0,
Token = |,              	7, 0,
Token = (,              	10, 1,
Token = cd,             	0, 1,
Token = ..,             	1, 1,
Token = &&,             	8, 1,
Token = (,              	10, 2,
Token = cd,             	0, 2,
Token = executor,       	1, 2,
Token = &&,             	8, 2,
Token = (,              	10, 3,
Token = cd,             	0, 3,
Token = obj_executor,   	1, 3,
Token = &&,             	8, 3,
Token = (,              	10, 4,
Token = pwd,	           	0, 4,
Token = &&,             	8, 4,
Token = (,              	10, 5,
Token = sleep,          	0, 5,
Token = 2,              	1, 5,
Token = ),              	10, 4,
Token = ),              	10, 3,
Token = ),              	10, 2,
Token = ),              	10, 1,
Token = &&,             	8, 1,
Token = pwd,   	        	0, 1,
Token = &&,             	8, 1,
Token = sleep,          	0, 1,
Token = 1,              	1, 1,
Token = ),              	10, 0,
Token = &&,             	8, 0,
Token = pwd,	           	0, 0,
[END]
