types:

COMMAND = 0;
ARGUMENT = 1;
FILE = 2;
> = 3;
< = 4;
>> = 5;
<< = 6;
| = 7;
&& = 8;
|| = 9;
*  = 10;

Row are: token_content // type // priority


[Test0, 2 token]
	Token = make, 0, 0,
	Token = frm, 1, 0,
[END]

case: cat <(ls)
[Test1, 35 token]
	Token = cat,             	0, 0,
	Token = <,              	4, 0,
	Token = (,              	10, 1,
	Token = cat,             	0, 1,
	Token = <,              	4, 1,
	Token = (,              	10, 2,
	Token = ls,             	0, 2,
	Token = ),					10, 1,
	Token = ),					10, 0,
[END]

case: ls | (cd .. && ( cd executor && (cd obj_executor && (echo $PWD && (sleep 2)))) && echo $PWD && sleep 1) && echo $PWD
[Test2, 35 token]
Token = ls,             	0, 0,
Token = |,              	7, 0,
Token = (,              	10, 1,
Token = cd,             	0, 1,
Token = ..,             	1, 1,
Token = &&,             	8, 1,
Token = (,              	10, 2,
Token = cd,             	0, 2,
Token = executor,       	1, 2,
Token = &&,             	8, 2,
Token = (,              	10, 3,
Token = cd,             	0, 3,
Token = obj_executor,   	1, 3,
Token = &&,             	8, 3,
Token = (,              	10, 4,
Token = pwd,	           	0, 4,
Token = &&,             	8, 4,
Token = (,              	10, 5,
Token = sleep,          	0, 5,
Token = 2,              	1, 5,
Token = ),              	10, 4,
Token = ),              	10, 3,
Token = ),              	10, 2,
Token = ),              	10, 1,
Token = &&,             	8, 1,
Token = pwd,   	        	0, 1,
Token = &&,             	8, 1,
Token = sleep,          	0, 1,
Token = 1,              	1, 1,
Token = ),              	10, 0,
Token = &&,             	8, 0,
Token = pwd,	           	0, 0,
[END]

[Test3, 2 Token]
Token = cd,		0, 0,
Token = ..,		1, 0,
[END]

case: ls  >file6.txt | grep -v .c >>file7.txt >>file8.txt >>file5.txt <file6.txt | grep -v .h >>file5.txt <file4.txt
[Test4, 23 token]
Token = ls,             0, 0,
Token = >,              3, 0,
Token = file6.txt,      2, 0,
Token = |,              7, 0,
Token = grep,           0, 0,
Token = -v,             1, 0,
Token = .c,             1, 0,
Token = >>,             5, 0,
Token = file7.txt,      2, 0,
Token = >>,             5, 0,
Token = file8.txt,      2, 0,
Token = >>,             5, 0,
Token = file5.txt,      2, 0,
Token = <,              4, 0,
Token = file6.txt,      2, 0,
Token = |,              7, 0,
Token = grep,           0, 0,
Token = -v,             1, 0,
Token = .h,             1, 0,
Token = >>,             5, 0,
Token = file5.txt,      2, 0,
Token = <,              4, 0,
Token = file4.txt,      2, 0,
[END]


		

case: grep -v .c <(ls | grep -v .h)
[Test5, 12 token]
Token = grep,           0, 0,
Token = -v,             1, 0,
Token = .c,             1, 0,
Token = <,				4, 0,
Token = (,              1, 1,
Token = ls,             0, 1,
Token = |,              7, 1,
Token = grep,           0, 1,
Token = -v,             1, 1,
Token = .h,             1, 1,
Token = ),              1, 0,
[END]



case: cat <<EOF
[Test6, 4 token]
Token = cat, 0, 0,
Token = <<,	 6, 0,
Token = EOF, 2, 0,
[END]


case: ls -a --author | grep .c -v | grep .h -v
[Test7, 12 token]
Token = ls,             0, 0,
Token = -a,             1, 0,
Token = --author,       1, 0,
Token = |,              7, 0,
Token = grep,           0, 0,
Token = .c,             1, 0,
Token = -v,             1, 0,
Token = |,              7, 0,
Token = grep,           0, 0,
Token = .h,             1, 0,
Token = -v,             1, 0,
[END]



case: cat file4.txt file4.txt | grep "error" file3.txt file2.txt
[Test8, 11 token]
Token = cat,            0, 0,
Token = file4.txt,      1, 0,
Token = file4.txt,      1, 0,
Token = |,              7, 0,
Token = grep,           0, 0,
Token = "error",        1, 0,
Token = >>,				5, 0,
Token = file3.txt,      2, 0,
Token = >>,				5, 0,
Token = file2.txt,      2, 0,
[END]



case: cat < input.txt | grep "error" > out1.txt >> out2.txt || echo "ERROR!!!" >> log.txt
[Test9, 15 token]
Token = cat,            0, 0,
Token = <,              4, 0,
Token = input.txt,      2, 0,
Token = |,              7, 0,
Token = grep,           0, 0,
Token = "error",        1, 0,
Token = >,              3, 0,
Token = out1.txt,       2, 0,
Token = >>,             5, 0,
Token = out2.txt,       2, 0,
Token = ||,             9, 0,
Token = echo,           0, 0,
Token = "ERROR!!!",     1, 0,
Token = >>,             5, 0,
Token = log.txt,        2, 0,
[END]

case: (cat <(ls | grep .c)) | grep builtin
[Test10, 13 token]
Token = (,              2, 1,
Token = cat,            0, 1,
Token = <,              4, 1,
Token = (,              2, 2,
Token = ls,             0, 2,
Token = |,              7, 2,
Token = grep,           0, 2,
Token = .c,           	1, 2,
Token = ),              2, 1,
Token = ),              2, 0,
Token = |,              7, 0,
Token = grep,           0, 0,
Token = builtin,        1, 0,
[END]
